// Generated by jextract

package org.libraw;

import jdk.incubator.foreign.FunctionDescriptor;

import java.lang.invoke.MethodHandle;

import static jdk.incubator.foreign.CLinker.C_DOUBLE;
import static jdk.incubator.foreign.CLinker.C_INT;

class constants$42 {

    static final FunctionDescriptor __issignaling$FUNC = FunctionDescriptor.of(C_INT,
            C_DOUBLE
    );
    static final MethodHandle __issignaling$MH = RuntimeHelper.downcallHandle(
            libraw_h.LIBRARIES, "__issignaling",
            "(D)I",
            constants$42.__issignaling$FUNC, false
    );
    static final FunctionDescriptor acos$FUNC = FunctionDescriptor.of(C_DOUBLE,
            C_DOUBLE
    );
    static final MethodHandle acos$MH = RuntimeHelper.downcallHandle(
            libraw_h.LIBRARIES, "acos",
            "(D)D",
            constants$42.acos$FUNC, false
    );
    static final FunctionDescriptor __acos$FUNC = FunctionDescriptor.of(C_DOUBLE,
            C_DOUBLE
    );
    static final MethodHandle __acos$MH = RuntimeHelper.downcallHandle(
            libraw_h.LIBRARIES, "__acos",
            "(D)D",
            constants$42.__acos$FUNC, false
    );
    static final FunctionDescriptor asin$FUNC = FunctionDescriptor.of(C_DOUBLE,
            C_DOUBLE
    );
    static final MethodHandle asin$MH = RuntimeHelper.downcallHandle(
            libraw_h.LIBRARIES, "asin",
            "(D)D",
            constants$42.asin$FUNC, false
    );
    static final FunctionDescriptor __asin$FUNC = FunctionDescriptor.of(C_DOUBLE,
            C_DOUBLE
    );
    static final MethodHandle __asin$MH = RuntimeHelper.downcallHandle(
            libraw_h.LIBRARIES, "__asin",
            "(D)D",
            constants$42.__asin$FUNC, false
    );
    static final FunctionDescriptor atan$FUNC = FunctionDescriptor.of(C_DOUBLE,
            C_DOUBLE
    );
    static final MethodHandle atan$MH = RuntimeHelper.downcallHandle(
            libraw_h.LIBRARIES, "atan",
            "(D)D",
            constants$42.atan$FUNC, false
    );
}


