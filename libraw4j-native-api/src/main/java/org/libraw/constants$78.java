// Generated by jextract

package org.libraw;

import jdk.incubator.foreign.FunctionDescriptor;

import java.lang.invoke.MethodHandle;

import static jdk.incubator.foreign.CLinker.C_FLOAT;
import static jdk.incubator.foreign.CLinker.C_INT;
import static jdk.incubator.foreign.CLinker.C_POINTER;

class constants$78 {

    static final FunctionDescriptor __copysignf$FUNC = FunctionDescriptor.of(C_FLOAT,
            C_FLOAT,
            C_FLOAT
    );
    static final MethodHandle __copysignf$MH = RuntimeHelper.downcallHandle(
            libraw_h.LIBRARIES, "__copysignf",
            "(FF)F",
            constants$78.__copysignf$FUNC, false
    );
    static final FunctionDescriptor nanf$FUNC = FunctionDescriptor.of(C_FLOAT,
            C_POINTER
    );
    static final MethodHandle nanf$MH = RuntimeHelper.downcallHandle(
            libraw_h.LIBRARIES, "nanf",
            "(Ljdk/incubator/foreign/MemoryAddress;)F",
            constants$78.nanf$FUNC, false
    );
    static final FunctionDescriptor __nanf$FUNC = FunctionDescriptor.of(C_FLOAT,
            C_POINTER
    );
    static final MethodHandle __nanf$MH = RuntimeHelper.downcallHandle(
            libraw_h.LIBRARIES, "__nanf",
            "(Ljdk/incubator/foreign/MemoryAddress;)F",
            constants$78.__nanf$FUNC, false
    );
    static final FunctionDescriptor isnanf$FUNC = FunctionDescriptor.of(C_INT,
            C_FLOAT
    );
    static final MethodHandle isnanf$MH = RuntimeHelper.downcallHandle(
            libraw_h.LIBRARIES, "isnanf",
            "(F)I",
            constants$78.isnanf$FUNC, false
    );
    static final FunctionDescriptor j0f$FUNC = FunctionDescriptor.of(C_FLOAT,
            C_FLOAT
    );
    static final MethodHandle j0f$MH = RuntimeHelper.downcallHandle(
            libraw_h.LIBRARIES, "j0f",
            "(F)F",
            constants$78.j0f$FUNC, false
    );
    static final FunctionDescriptor __j0f$FUNC = FunctionDescriptor.of(C_FLOAT,
            C_FLOAT
    );
    static final MethodHandle __j0f$MH = RuntimeHelper.downcallHandle(
            libraw_h.LIBRARIES, "__j0f",
            "(F)F",
            constants$78.__j0f$FUNC, false
    );
}


