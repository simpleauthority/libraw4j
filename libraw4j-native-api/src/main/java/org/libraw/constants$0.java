// Generated by jextract

package org.libraw;

import jdk.incubator.foreign.FunctionDescriptor;

import java.lang.invoke.MethodHandle;

import static jdk.incubator.foreign.CLinker.C_INT;
import static jdk.incubator.foreign.CLinker.C_LONG;
import static jdk.incubator.foreign.CLinker.C_POINTER;

class constants$0 {

    static final FunctionDescriptor memcpy$FUNC = FunctionDescriptor.of(C_POINTER,
            C_POINTER,
            C_POINTER,
            C_LONG
    );
    static final MethodHandle memcpy$MH = RuntimeHelper.downcallHandle(
            libraw_h.LIBRARIES, "memcpy",
            "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;J)Ljdk/incubator/foreign/MemoryAddress;",
            constants$0.memcpy$FUNC, false
    );
    static final FunctionDescriptor memmove$FUNC = FunctionDescriptor.of(C_POINTER,
            C_POINTER,
            C_POINTER,
            C_LONG
    );
    static final MethodHandle memmove$MH = RuntimeHelper.downcallHandle(
            libraw_h.LIBRARIES, "memmove",
            "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;J)Ljdk/incubator/foreign/MemoryAddress;",
            constants$0.memmove$FUNC, false
    );
    static final FunctionDescriptor memccpy$FUNC = FunctionDescriptor.of(C_POINTER,
            C_POINTER,
            C_POINTER,
            C_INT,
            C_LONG
    );
    static final MethodHandle memccpy$MH = RuntimeHelper.downcallHandle(
            libraw_h.LIBRARIES, "memccpy",
            "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;IJ)Ljdk/incubator/foreign/MemoryAddress;",
            constants$0.memccpy$FUNC, false
    );
    static final FunctionDescriptor memset$FUNC = FunctionDescriptor.of(C_POINTER,
            C_POINTER,
            C_INT,
            C_LONG
    );
    static final MethodHandle memset$MH = RuntimeHelper.downcallHandle(
            libraw_h.LIBRARIES, "memset",
            "(Ljdk/incubator/foreign/MemoryAddress;IJ)Ljdk/incubator/foreign/MemoryAddress;",
            constants$0.memset$FUNC, false
    );
    static final FunctionDescriptor memcmp$FUNC = FunctionDescriptor.of(C_INT,
            C_POINTER,
            C_POINTER,
            C_LONG
    );
    static final MethodHandle memcmp$MH = RuntimeHelper.downcallHandle(
            libraw_h.LIBRARIES, "memcmp",
            "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;J)I",
            constants$0.memcmp$FUNC, false
    );
    static final FunctionDescriptor memchr$FUNC = FunctionDescriptor.of(C_POINTER,
            C_POINTER,
            C_INT,
            C_LONG
    );
    static final MethodHandle memchr$MH = RuntimeHelper.downcallHandle(
            libraw_h.LIBRARIES, "memchr",
            "(Ljdk/incubator/foreign/MemoryAddress;IJ)Ljdk/incubator/foreign/MemoryAddress;",
            constants$0.memchr$FUNC, false
    );
}


