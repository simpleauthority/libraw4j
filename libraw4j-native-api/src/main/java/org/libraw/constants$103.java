// Generated by jextract

package org.libraw;

import jdk.incubator.foreign.CLinker;
import jdk.incubator.foreign.FunctionDescriptor;
import jdk.incubator.foreign.MemoryAddress;
import jdk.incubator.foreign.MemorySegment;
import jdk.incubator.foreign.ResourceScope;

import java.lang.invoke.MethodHandle;

import static jdk.incubator.foreign.CLinker.C_POINTER;

class constants$103 {

    static final FunctionDescriptor libraw_get_lensinfo$FUNC = FunctionDescriptor.of(C_POINTER,
            C_POINTER
    );
    static final MethodHandle libraw_get_lensinfo$MH = RuntimeHelper.downcallHandle(
            libraw_h.LIBRARIES, "libraw_get_lensinfo",
            "(Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
            constants$103.libraw_get_lensinfo$FUNC, false
    );
    static final FunctionDescriptor libraw_get_imgother$FUNC = FunctionDescriptor.of(C_POINTER,
            C_POINTER
    );
    static final MethodHandle libraw_get_imgother$MH = RuntimeHelper.downcallHandle(
            libraw_h.LIBRARIES, "libraw_get_imgother",
            "(Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
            constants$103.libraw_get_imgother$FUNC, false
    );
    static final MemoryAddress NULL$ADDR = MemoryAddress.ofLong(0L);
    static final MemorySegment P_tmpdir$SEGMENT = CLinker.toCString("/tmp", ResourceScope.newImplicitScope());
    static final MemorySegment __PRI64_PREFIX$SEGMENT = CLinker.toCString("l", ResourceScope.newImplicitScope());
    static final MemorySegment __PRIPTR_PREFIX$SEGMENT = CLinker.toCString("l", ResourceScope.newImplicitScope());
}


