// Generated by jextract

package org.libraw;

import jdk.incubator.foreign.FunctionDescriptor;

import java.lang.invoke.MethodHandle;

import static jdk.incubator.foreign.CLinker.C_DOUBLE;

class constants$45 {

    static final FunctionDescriptor __sinh$FUNC = FunctionDescriptor.of(C_DOUBLE,
            C_DOUBLE
    );
    static final MethodHandle __sinh$MH = RuntimeHelper.downcallHandle(
            libraw_h.LIBRARIES, "__sinh",
            "(D)D",
            constants$45.__sinh$FUNC, false
    );
    static final FunctionDescriptor tanh$FUNC = FunctionDescriptor.of(C_DOUBLE,
            C_DOUBLE
    );
    static final MethodHandle tanh$MH = RuntimeHelper.downcallHandle(
            libraw_h.LIBRARIES, "tanh",
            "(D)D",
            constants$45.tanh$FUNC, false
    );
    static final FunctionDescriptor __tanh$FUNC = FunctionDescriptor.of(C_DOUBLE,
            C_DOUBLE
    );
    static final MethodHandle __tanh$MH = RuntimeHelper.downcallHandle(
            libraw_h.LIBRARIES, "__tanh",
            "(D)D",
            constants$45.__tanh$FUNC, false
    );
    static final FunctionDescriptor acosh$FUNC = FunctionDescriptor.of(C_DOUBLE,
            C_DOUBLE
    );
    static final MethodHandle acosh$MH = RuntimeHelper.downcallHandle(
            libraw_h.LIBRARIES, "acosh",
            "(D)D",
            constants$45.acosh$FUNC, false
    );
    static final FunctionDescriptor __acosh$FUNC = FunctionDescriptor.of(C_DOUBLE,
            C_DOUBLE
    );
    static final MethodHandle __acosh$MH = RuntimeHelper.downcallHandle(
            libraw_h.LIBRARIES, "__acosh",
            "(D)D",
            constants$45.__acosh$FUNC, false
    );
    static final FunctionDescriptor asinh$FUNC = FunctionDescriptor.of(C_DOUBLE,
            C_DOUBLE
    );
    static final MethodHandle asinh$MH = RuntimeHelper.downcallHandle(
            libraw_h.LIBRARIES, "asinh",
            "(D)D",
            constants$45.asinh$FUNC, false
    );
}


