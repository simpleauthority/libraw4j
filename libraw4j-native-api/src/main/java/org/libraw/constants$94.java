// Generated by jextract

package org.libraw;

import jdk.incubator.foreign.FunctionDescriptor;

import java.lang.invoke.MethodHandle;

import static jdk.incubator.foreign.CLinker.C_INT;
import static jdk.incubator.foreign.CLinker.C_POINTER;

class constants$94 {

    static final FunctionDescriptor process_step_callback$FUNC = FunctionDescriptor.ofVoid(
            C_POINTER
    );
    static final MethodHandle process_step_callback$MH = RuntimeHelper.downcallHandle(
            "(Ljdk/incubator/foreign/MemoryAddress;)V",
            constants$94.process_step_callback$FUNC, false
    );
    static final FunctionDescriptor libraw_strerror$FUNC = FunctionDescriptor.of(C_POINTER,
            C_INT
    );
    static final MethodHandle libraw_strerror$MH = RuntimeHelper.downcallHandle(
            libraw_h.LIBRARIES, "libraw_strerror",
            "(I)Ljdk/incubator/foreign/MemoryAddress;",
            constants$94.libraw_strerror$FUNC, false
    );
    static final FunctionDescriptor libraw_strprogress$FUNC = FunctionDescriptor.of(C_POINTER,
            C_INT
    );
    static final MethodHandle libraw_strprogress$MH = RuntimeHelper.downcallHandle(
            libraw_h.LIBRARIES, "libraw_strprogress",
            "(I)Ljdk/incubator/foreign/MemoryAddress;",
            constants$94.libraw_strprogress$FUNC, false
    );
    static final FunctionDescriptor libraw_init$FUNC = FunctionDescriptor.of(C_POINTER,
            C_INT
    );
    static final MethodHandle libraw_init$MH = RuntimeHelper.downcallHandle(
            libraw_h.LIBRARIES, "libraw_init",
            "(I)Ljdk/incubator/foreign/MemoryAddress;",
            constants$94.libraw_init$FUNC, false
    );
    static final FunctionDescriptor libraw_open_file$FUNC = FunctionDescriptor.of(C_INT,
            C_POINTER,
            C_POINTER
    );
    static final MethodHandle libraw_open_file$MH = RuntimeHelper.downcallHandle(
            libraw_h.LIBRARIES, "libraw_open_file",
            "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
            constants$94.libraw_open_file$FUNC, false
    );
}


