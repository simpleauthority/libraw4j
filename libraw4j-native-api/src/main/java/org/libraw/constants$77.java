// Generated by jextract

package org.libraw;

import jdk.incubator.foreign.FunctionDescriptor;

import java.lang.invoke.MethodHandle;

import static jdk.incubator.foreign.CLinker.C_FLOAT;
import static jdk.incubator.foreign.CLinker.C_INT;

class constants$77 {

    static final FunctionDescriptor finitef$FUNC = FunctionDescriptor.of(C_INT,
            C_FLOAT
    );
    static final MethodHandle finitef$MH = RuntimeHelper.downcallHandle(
            libraw_h.LIBRARIES, "finitef",
            "(F)I",
            constants$77.finitef$FUNC, false
    );
    static final FunctionDescriptor dremf$FUNC = FunctionDescriptor.of(C_FLOAT,
            C_FLOAT,
            C_FLOAT
    );
    static final MethodHandle dremf$MH = RuntimeHelper.downcallHandle(
            libraw_h.LIBRARIES, "dremf",
            "(FF)F",
            constants$77.dremf$FUNC, false
    );
    static final FunctionDescriptor __dremf$FUNC = FunctionDescriptor.of(C_FLOAT,
            C_FLOAT,
            C_FLOAT
    );
    static final MethodHandle __dremf$MH = RuntimeHelper.downcallHandle(
            libraw_h.LIBRARIES, "__dremf",
            "(FF)F",
            constants$77.__dremf$FUNC, false
    );
    static final FunctionDescriptor significandf$FUNC = FunctionDescriptor.of(C_FLOAT,
            C_FLOAT
    );
    static final MethodHandle significandf$MH = RuntimeHelper.downcallHandle(
            libraw_h.LIBRARIES, "significandf",
            "(F)F",
            constants$77.significandf$FUNC, false
    );
    static final FunctionDescriptor __significandf$FUNC = FunctionDescriptor.of(C_FLOAT,
            C_FLOAT
    );
    static final MethodHandle __significandf$MH = RuntimeHelper.downcallHandle(
            libraw_h.LIBRARIES, "__significandf",
            "(F)F",
            constants$77.__significandf$FUNC, false
    );
    static final FunctionDescriptor copysignf$FUNC = FunctionDescriptor.of(C_FLOAT,
            C_FLOAT,
            C_FLOAT
    );
    static final MethodHandle copysignf$MH = RuntimeHelper.downcallHandle(
            libraw_h.LIBRARIES, "copysignf",
            "(FF)F",
            constants$77.copysignf$FUNC, false
    );
}


