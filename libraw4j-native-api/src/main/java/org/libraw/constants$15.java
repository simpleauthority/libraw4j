// Generated by jextract

package org.libraw;

import jdk.incubator.foreign.FunctionDescriptor;

import java.lang.invoke.MethodHandle;

import static jdk.incubator.foreign.CLinker.C_INT;
import static jdk.incubator.foreign.CLinker.C_POINTER;

class constants$15 {

    static final FunctionDescriptor getc$FUNC = FunctionDescriptor.of(C_INT,
            C_POINTER
    );
    static final MethodHandle getc$MH = RuntimeHelper.downcallHandle(
            libraw_h.LIBRARIES, "getc",
            "(Ljdk/incubator/foreign/MemoryAddress;)I",
            constants$15.getc$FUNC, false
    );
    static final FunctionDescriptor getchar$FUNC = FunctionDescriptor.of(C_INT);
    static final MethodHandle getchar$MH = RuntimeHelper.downcallHandle(
            libraw_h.LIBRARIES, "getchar",
            "()I",
            constants$15.getchar$FUNC, false
    );
    static final FunctionDescriptor getc_unlocked$FUNC = FunctionDescriptor.of(C_INT,
            C_POINTER
    );
    static final MethodHandle getc_unlocked$MH = RuntimeHelper.downcallHandle(
            libraw_h.LIBRARIES, "getc_unlocked",
            "(Ljdk/incubator/foreign/MemoryAddress;)I",
            constants$15.getc_unlocked$FUNC, false
    );
    static final FunctionDescriptor getchar_unlocked$FUNC = FunctionDescriptor.of(C_INT);
    static final MethodHandle getchar_unlocked$MH = RuntimeHelper.downcallHandle(
            libraw_h.LIBRARIES, "getchar_unlocked",
            "()I",
            constants$15.getchar_unlocked$FUNC, false
    );
    static final FunctionDescriptor fgetc_unlocked$FUNC = FunctionDescriptor.of(C_INT,
            C_POINTER
    );
    static final MethodHandle fgetc_unlocked$MH = RuntimeHelper.downcallHandle(
            libraw_h.LIBRARIES, "fgetc_unlocked",
            "(Ljdk/incubator/foreign/MemoryAddress;)I",
            constants$15.fgetc_unlocked$FUNC, false
    );
    static final FunctionDescriptor fputc$FUNC = FunctionDescriptor.of(C_INT,
            C_INT,
            C_POINTER
    );
    static final MethodHandle fputc$MH = RuntimeHelper.downcallHandle(
            libraw_h.LIBRARIES, "fputc",
            "(ILjdk/incubator/foreign/MemoryAddress;)I",
            constants$15.fputc$FUNC, false
    );
}


