// Generated by jextract

package org.libraw;

import jdk.incubator.foreign.FunctionDescriptor;

import java.lang.invoke.MethodHandle;

import static jdk.incubator.foreign.CLinker.C_FLOAT;
import static jdk.incubator.foreign.CLinker.C_POINTER;

class constants$82 {

    static final FunctionDescriptor gammaf$FUNC = FunctionDescriptor.of(C_FLOAT,
            C_FLOAT
    );
    static final MethodHandle gammaf$MH = RuntimeHelper.downcallHandle(
            libraw_h.LIBRARIES, "gammaf",
            "(F)F",
            constants$82.gammaf$FUNC, false
    );
    static final FunctionDescriptor __gammaf$FUNC = FunctionDescriptor.of(C_FLOAT,
            C_FLOAT
    );
    static final MethodHandle __gammaf$MH = RuntimeHelper.downcallHandle(
            libraw_h.LIBRARIES, "__gammaf",
            "(F)F",
            constants$82.__gammaf$FUNC, false
    );
    static final FunctionDescriptor lgammaf_r$FUNC = FunctionDescriptor.of(C_FLOAT,
            C_FLOAT,
            C_POINTER
    );
    static final MethodHandle lgammaf_r$MH = RuntimeHelper.downcallHandle(
            libraw_h.LIBRARIES, "lgammaf_r",
            "(FLjdk/incubator/foreign/MemoryAddress;)F",
            constants$82.lgammaf_r$FUNC, false
    );
    static final FunctionDescriptor __lgammaf_r$FUNC = FunctionDescriptor.of(C_FLOAT,
            C_FLOAT,
            C_POINTER
    );
    static final MethodHandle __lgammaf_r$MH = RuntimeHelper.downcallHandle(
            libraw_h.LIBRARIES, "__lgammaf_r",
            "(FLjdk/incubator/foreign/MemoryAddress;)F",
            constants$82.__lgammaf_r$FUNC, false
    );
    static final FunctionDescriptor rintf$FUNC = FunctionDescriptor.of(C_FLOAT,
            C_FLOAT
    );
    static final MethodHandle rintf$MH = RuntimeHelper.downcallHandle(
            libraw_h.LIBRARIES, "rintf",
            "(F)F",
            constants$82.rintf$FUNC, false
    );
    static final FunctionDescriptor __rintf$FUNC = FunctionDescriptor.of(C_FLOAT,
            C_FLOAT
    );
    static final MethodHandle __rintf$MH = RuntimeHelper.downcallHandle(
            libraw_h.LIBRARIES, "__rintf",
            "(F)F",
            constants$82.__rintf$FUNC, false
    );
}


