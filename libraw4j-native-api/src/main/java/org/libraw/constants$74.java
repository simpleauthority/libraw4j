// Generated by jextract

package org.libraw;

import jdk.incubator.foreign.FunctionDescriptor;

import java.lang.invoke.MethodHandle;

import static jdk.incubator.foreign.CLinker.C_FLOAT;

class constants$74 {

    static final FunctionDescriptor __log2f$FUNC = FunctionDescriptor.of(C_FLOAT,
            C_FLOAT
    );
    static final MethodHandle __log2f$MH = RuntimeHelper.downcallHandle(
            libraw_h.LIBRARIES, "__log2f",
            "(F)F",
            constants$74.__log2f$FUNC, false
    );
    static final FunctionDescriptor powf$FUNC = FunctionDescriptor.of(C_FLOAT,
            C_FLOAT,
            C_FLOAT
    );
    static final MethodHandle powf$MH = RuntimeHelper.downcallHandle(
            libraw_h.LIBRARIES, "powf",
            "(FF)F",
            constants$74.powf$FUNC, false
    );
    static final FunctionDescriptor __powf$FUNC = FunctionDescriptor.of(C_FLOAT,
            C_FLOAT,
            C_FLOAT
    );
    static final MethodHandle __powf$MH = RuntimeHelper.downcallHandle(
            libraw_h.LIBRARIES, "__powf",
            "(FF)F",
            constants$74.__powf$FUNC, false
    );
    static final FunctionDescriptor sqrtf$FUNC = FunctionDescriptor.of(C_FLOAT,
            C_FLOAT
    );
    static final MethodHandle sqrtf$MH = RuntimeHelper.downcallHandle(
            libraw_h.LIBRARIES, "sqrtf",
            "(F)F",
            constants$74.sqrtf$FUNC, false
    );
    static final FunctionDescriptor __sqrtf$FUNC = FunctionDescriptor.of(C_FLOAT,
            C_FLOAT
    );
    static final MethodHandle __sqrtf$MH = RuntimeHelper.downcallHandle(
            libraw_h.LIBRARIES, "__sqrtf",
            "(F)F",
            constants$74.__sqrtf$FUNC, false
    );
    static final FunctionDescriptor hypotf$FUNC = FunctionDescriptor.of(C_FLOAT,
            C_FLOAT,
            C_FLOAT
    );
    static final MethodHandle hypotf$MH = RuntimeHelper.downcallHandle(
            libraw_h.LIBRARIES, "hypotf",
            "(FF)F",
            constants$74.hypotf$FUNC, false
    );
}


