// Generated by jextract

package org.libraw;

import jdk.incubator.foreign.FunctionDescriptor;

import java.lang.invoke.MethodHandle;

import static jdk.incubator.foreign.CLinker.C_FLOAT;

class constants$73 {

    static final FunctionDescriptor __log1pf$FUNC = FunctionDescriptor.of(C_FLOAT,
            C_FLOAT
    );
    static final MethodHandle __log1pf$MH = RuntimeHelper.downcallHandle(
            libraw_h.LIBRARIES, "__log1pf",
            "(F)F",
            constants$73.__log1pf$FUNC, false
    );
    static final FunctionDescriptor logbf$FUNC = FunctionDescriptor.of(C_FLOAT,
            C_FLOAT
    );
    static final MethodHandle logbf$MH = RuntimeHelper.downcallHandle(
            libraw_h.LIBRARIES, "logbf",
            "(F)F",
            constants$73.logbf$FUNC, false
    );
    static final FunctionDescriptor __logbf$FUNC = FunctionDescriptor.of(C_FLOAT,
            C_FLOAT
    );
    static final MethodHandle __logbf$MH = RuntimeHelper.downcallHandle(
            libraw_h.LIBRARIES, "__logbf",
            "(F)F",
            constants$73.__logbf$FUNC, false
    );
    static final FunctionDescriptor exp2f$FUNC = FunctionDescriptor.of(C_FLOAT,
            C_FLOAT
    );
    static final MethodHandle exp2f$MH = RuntimeHelper.downcallHandle(
            libraw_h.LIBRARIES, "exp2f",
            "(F)F",
            constants$73.exp2f$FUNC, false
    );
    static final FunctionDescriptor __exp2f$FUNC = FunctionDescriptor.of(C_FLOAT,
            C_FLOAT
    );
    static final MethodHandle __exp2f$MH = RuntimeHelper.downcallHandle(
            libraw_h.LIBRARIES, "__exp2f",
            "(F)F",
            constants$73.__exp2f$FUNC, false
    );
    static final FunctionDescriptor log2f$FUNC = FunctionDescriptor.of(C_FLOAT,
            C_FLOAT
    );
    static final MethodHandle log2f$MH = RuntimeHelper.downcallHandle(
            libraw_h.LIBRARIES, "log2f",
            "(F)F",
            constants$73.log2f$FUNC, false
    );
}


