// Generated by jextract

package org.libraw;

import jdk.incubator.foreign.FunctionDescriptor;

import java.lang.invoke.MethodHandle;

import static jdk.incubator.foreign.CLinker.C_INT;
import static jdk.incubator.foreign.CLinker.C_LONG;
import static jdk.incubator.foreign.CLinker.C_POINTER;

class constants$40 {

    static final FunctionDescriptor wctomb$FUNC = FunctionDescriptor.of(C_INT,
            C_POINTER,
            C_INT
    );
    static final MethodHandle wctomb$MH = RuntimeHelper.downcallHandle(
            libraw_h.LIBRARIES, "wctomb",
            "(Ljdk/incubator/foreign/MemoryAddress;I)I",
            constants$40.wctomb$FUNC, false
    );
    static final FunctionDescriptor mbstowcs$FUNC = FunctionDescriptor.of(C_LONG,
            C_POINTER,
            C_POINTER,
            C_LONG
    );
    static final MethodHandle mbstowcs$MH = RuntimeHelper.downcallHandle(
            libraw_h.LIBRARIES, "mbstowcs",
            "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;J)J",
            constants$40.mbstowcs$FUNC, false
    );
    static final FunctionDescriptor wcstombs$FUNC = FunctionDescriptor.of(C_LONG,
            C_POINTER,
            C_POINTER,
            C_LONG
    );
    static final MethodHandle wcstombs$MH = RuntimeHelper.downcallHandle(
            libraw_h.LIBRARIES, "wcstombs",
            "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;J)J",
            constants$40.wcstombs$FUNC, false
    );
    static final FunctionDescriptor rpmatch$FUNC = FunctionDescriptor.of(C_INT,
            C_POINTER
    );
    static final MethodHandle rpmatch$MH = RuntimeHelper.downcallHandle(
            libraw_h.LIBRARIES, "rpmatch",
            "(Ljdk/incubator/foreign/MemoryAddress;)I",
            constants$40.rpmatch$FUNC, false
    );
    static final FunctionDescriptor getsubopt$FUNC = FunctionDescriptor.of(C_INT,
            C_POINTER,
            C_POINTER,
            C_POINTER
    );
    static final MethodHandle getsubopt$MH = RuntimeHelper.downcallHandle(
            libraw_h.LIBRARIES, "getsubopt",
            "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
            constants$40.getsubopt$FUNC, false
    );
    static final FunctionDescriptor getloadavg$FUNC = FunctionDescriptor.of(C_INT,
            C_POINTER,
            C_INT
    );
    static final MethodHandle getloadavg$MH = RuntimeHelper.downcallHandle(
            libraw_h.LIBRARIES, "getloadavg",
            "(Ljdk/incubator/foreign/MemoryAddress;I)I",
            constants$40.getloadavg$FUNC, false
    );
}


