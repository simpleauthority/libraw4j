// Generated by jextract

package org.libraw;

import jdk.incubator.foreign.FunctionDescriptor;

import java.lang.invoke.MethodHandle;

import static jdk.incubator.foreign.CLinker.C_DOUBLE;
import static jdk.incubator.foreign.CLinker.C_POINTER;

class constants$58 {

    static final FunctionDescriptor gamma$FUNC = FunctionDescriptor.of(C_DOUBLE,
            C_DOUBLE
    );
    static final MethodHandle gamma$MH = RuntimeHelper.downcallHandle(
            libraw_h.LIBRARIES, "gamma",
            "(D)D",
            constants$58.gamma$FUNC, false
    );
    static final FunctionDescriptor __gamma$FUNC = FunctionDescriptor.of(C_DOUBLE,
            C_DOUBLE
    );
    static final MethodHandle __gamma$MH = RuntimeHelper.downcallHandle(
            libraw_h.LIBRARIES, "__gamma",
            "(D)D",
            constants$58.__gamma$FUNC, false
    );
    static final FunctionDescriptor lgamma_r$FUNC = FunctionDescriptor.of(C_DOUBLE,
            C_DOUBLE,
            C_POINTER
    );
    static final MethodHandle lgamma_r$MH = RuntimeHelper.downcallHandle(
            libraw_h.LIBRARIES, "lgamma_r",
            "(DLjdk/incubator/foreign/MemoryAddress;)D",
            constants$58.lgamma_r$FUNC, false
    );
    static final FunctionDescriptor __lgamma_r$FUNC = FunctionDescriptor.of(C_DOUBLE,
            C_DOUBLE,
            C_POINTER
    );
    static final MethodHandle __lgamma_r$MH = RuntimeHelper.downcallHandle(
            libraw_h.LIBRARIES, "__lgamma_r",
            "(DLjdk/incubator/foreign/MemoryAddress;)D",
            constants$58.__lgamma_r$FUNC, false
    );
    static final FunctionDescriptor rint$FUNC = FunctionDescriptor.of(C_DOUBLE,
            C_DOUBLE
    );
    static final MethodHandle rint$MH = RuntimeHelper.downcallHandle(
            libraw_h.LIBRARIES, "rint",
            "(D)D",
            constants$58.rint$FUNC, false
    );
    static final FunctionDescriptor __rint$FUNC = FunctionDescriptor.of(C_DOUBLE,
            C_DOUBLE
    );
    static final MethodHandle __rint$MH = RuntimeHelper.downcallHandle(
            libraw_h.LIBRARIES, "__rint",
            "(D)D",
            constants$58.__rint$FUNC, false
    );
}


