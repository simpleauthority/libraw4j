// Generated by jextract

package org.libraw;

import jdk.incubator.foreign.FunctionDescriptor;

import java.lang.invoke.MethodHandle;

import static jdk.incubator.foreign.CLinker.C_INT;
import static jdk.incubator.foreign.CLinker.C_LONG;
import static jdk.incubator.foreign.CLinker.C_POINTER;

class constants$27 {

    static final FunctionDescriptor srandom$FUNC = FunctionDescriptor.ofVoid(
            C_INT
    );
    static final MethodHandle srandom$MH = RuntimeHelper.downcallHandle(
            libraw_h.LIBRARIES, "srandom",
            "(I)V",
            constants$27.srandom$FUNC, false
    );
    static final FunctionDescriptor initstate$FUNC = FunctionDescriptor.of(C_POINTER,
            C_INT,
            C_POINTER,
            C_LONG
    );
    static final MethodHandle initstate$MH = RuntimeHelper.downcallHandle(
            libraw_h.LIBRARIES, "initstate",
            "(ILjdk/incubator/foreign/MemoryAddress;J)Ljdk/incubator/foreign/MemoryAddress;",
            constants$27.initstate$FUNC, false
    );
    static final FunctionDescriptor setstate$FUNC = FunctionDescriptor.of(C_POINTER,
            C_POINTER
    );
    static final MethodHandle setstate$MH = RuntimeHelper.downcallHandle(
            libraw_h.LIBRARIES, "setstate",
            "(Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
            constants$27.setstate$FUNC, false
    );
    static final FunctionDescriptor random_r$FUNC = FunctionDescriptor.of(C_INT,
            C_POINTER,
            C_POINTER
    );
    static final MethodHandle random_r$MH = RuntimeHelper.downcallHandle(
            libraw_h.LIBRARIES, "random_r",
            "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
            constants$27.random_r$FUNC, false
    );
    static final FunctionDescriptor srandom_r$FUNC = FunctionDescriptor.of(C_INT,
            C_INT,
            C_POINTER
    );
    static final MethodHandle srandom_r$MH = RuntimeHelper.downcallHandle(
            libraw_h.LIBRARIES, "srandom_r",
            "(ILjdk/incubator/foreign/MemoryAddress;)I",
            constants$27.srandom_r$FUNC, false
    );
    static final FunctionDescriptor initstate_r$FUNC = FunctionDescriptor.of(C_INT,
            C_INT,
            C_POINTER,
            C_LONG,
            C_POINTER
    );
    static final MethodHandle initstate_r$MH = RuntimeHelper.downcallHandle(
            libraw_h.LIBRARIES, "initstate_r",
            "(ILjdk/incubator/foreign/MemoryAddress;JLjdk/incubator/foreign/MemoryAddress;)I",
            constants$27.initstate_r$FUNC, false
    );
}


