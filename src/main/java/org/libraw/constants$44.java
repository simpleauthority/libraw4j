// Generated by jextract

package org.libraw;

import jdk.incubator.foreign.FunctionDescriptor;

import java.lang.invoke.MethodHandle;

import static jdk.incubator.foreign.CLinker.C_DOUBLE;

class constants$44 {

    static final FunctionDescriptor __sin$FUNC = FunctionDescriptor.of(C_DOUBLE,
            C_DOUBLE
    );
    static final MethodHandle __sin$MH = RuntimeHelper.downcallHandle(
            libraw_h.LIBRARIES, "__sin",
            "(D)D",
            constants$44.__sin$FUNC, false
    );
    static final FunctionDescriptor tan$FUNC = FunctionDescriptor.of(C_DOUBLE,
            C_DOUBLE
    );
    static final MethodHandle tan$MH = RuntimeHelper.downcallHandle(
            libraw_h.LIBRARIES, "tan",
            "(D)D",
            constants$44.tan$FUNC, false
    );
    static final FunctionDescriptor __tan$FUNC = FunctionDescriptor.of(C_DOUBLE,
            C_DOUBLE
    );
    static final MethodHandle __tan$MH = RuntimeHelper.downcallHandle(
            libraw_h.LIBRARIES, "__tan",
            "(D)D",
            constants$44.__tan$FUNC, false
    );
    static final FunctionDescriptor cosh$FUNC = FunctionDescriptor.of(C_DOUBLE,
            C_DOUBLE
    );
    static final MethodHandle cosh$MH = RuntimeHelper.downcallHandle(
            libraw_h.LIBRARIES, "cosh",
            "(D)D",
            constants$44.cosh$FUNC, false
    );
    static final FunctionDescriptor __cosh$FUNC = FunctionDescriptor.of(C_DOUBLE,
            C_DOUBLE
    );
    static final MethodHandle __cosh$MH = RuntimeHelper.downcallHandle(
            libraw_h.LIBRARIES, "__cosh",
            "(D)D",
            constants$44.__cosh$FUNC, false
    );
    static final FunctionDescriptor sinh$FUNC = FunctionDescriptor.of(C_DOUBLE,
            C_DOUBLE
    );
    static final MethodHandle sinh$MH = RuntimeHelper.downcallHandle(
            libraw_h.LIBRARIES, "sinh",
            "(D)D",
            constants$44.sinh$FUNC, false
    );
}


