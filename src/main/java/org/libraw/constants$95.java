// Generated by jextract

package org.libraw;

import jdk.incubator.foreign.FunctionDescriptor;

import java.lang.invoke.MethodHandle;

import static jdk.incubator.foreign.CLinker.C_INT;
import static jdk.incubator.foreign.CLinker.C_LONG;
import static jdk.incubator.foreign.CLinker.C_LONG_LONG;
import static jdk.incubator.foreign.CLinker.C_POINTER;

class constants$95 {

    static final FunctionDescriptor libraw_open_file_ex$FUNC = FunctionDescriptor.of(C_INT,
            C_POINTER,
            C_POINTER,
            C_LONG_LONG
    );
    static final MethodHandle libraw_open_file_ex$MH = RuntimeHelper.downcallHandle(
            libraw_h.LIBRARIES, "libraw_open_file_ex",
            "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;J)I",
            constants$95.libraw_open_file_ex$FUNC, false
    );
    static final FunctionDescriptor libraw_open_buffer$FUNC = FunctionDescriptor.of(C_INT,
            C_POINTER,
            C_POINTER,
            C_LONG
    );
    static final MethodHandle libraw_open_buffer$MH = RuntimeHelper.downcallHandle(
            libraw_h.LIBRARIES, "libraw_open_buffer",
            "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;J)I",
            constants$95.libraw_open_buffer$FUNC, false
    );
    static final FunctionDescriptor libraw_unpack$FUNC = FunctionDescriptor.of(C_INT,
            C_POINTER
    );
    static final MethodHandle libraw_unpack$MH = RuntimeHelper.downcallHandle(
            libraw_h.LIBRARIES, "libraw_unpack",
            "(Ljdk/incubator/foreign/MemoryAddress;)I",
            constants$95.libraw_unpack$FUNC, false
    );
    static final FunctionDescriptor libraw_unpack_thumb$FUNC = FunctionDescriptor.of(C_INT,
            C_POINTER
    );
    static final MethodHandle libraw_unpack_thumb$MH = RuntimeHelper.downcallHandle(
            libraw_h.LIBRARIES, "libraw_unpack_thumb",
            "(Ljdk/incubator/foreign/MemoryAddress;)I",
            constants$95.libraw_unpack_thumb$FUNC, false
    );
    static final FunctionDescriptor libraw_recycle_datastream$FUNC = FunctionDescriptor.ofVoid(
            C_POINTER
    );
    static final MethodHandle libraw_recycle_datastream$MH = RuntimeHelper.downcallHandle(
            libraw_h.LIBRARIES, "libraw_recycle_datastream",
            "(Ljdk/incubator/foreign/MemoryAddress;)V",
            constants$95.libraw_recycle_datastream$FUNC, false
    );
    static final FunctionDescriptor libraw_recycle$FUNC = FunctionDescriptor.ofVoid(
            C_POINTER
    );
    static final MethodHandle libraw_recycle$MH = RuntimeHelper.downcallHandle(
            libraw_h.LIBRARIES, "libraw_recycle",
            "(Ljdk/incubator/foreign/MemoryAddress;)V",
            constants$95.libraw_recycle$FUNC, false
    );
}


