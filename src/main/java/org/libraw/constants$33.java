// Generated by jextract

package org.libraw;

import jdk.incubator.foreign.FunctionDescriptor;

import java.lang.invoke.MethodHandle;

import static jdk.incubator.foreign.CLinker.C_INT;
import static jdk.incubator.foreign.CLinker.C_LONG;
import static jdk.incubator.foreign.CLinker.C_POINTER;

class constants$33 {

    static final FunctionDescriptor aligned_alloc$FUNC = FunctionDescriptor.of(C_POINTER,
            C_LONG,
            C_LONG
    );
    static final MethodHandle aligned_alloc$MH = RuntimeHelper.downcallHandle(
            libraw_h.LIBRARIES, "aligned_alloc",
            "(JJ)Ljdk/incubator/foreign/MemoryAddress;",
            constants$33.aligned_alloc$FUNC, false
    );
    static final FunctionDescriptor abort$FUNC = FunctionDescriptor.ofVoid();
    static final MethodHandle abort$MH = RuntimeHelper.downcallHandle(
            libraw_h.LIBRARIES, "abort",
            "()V",
            constants$33.abort$FUNC, false
    );
    static final FunctionDescriptor atexit$__func$FUNC = FunctionDescriptor.ofVoid();
    static final MethodHandle atexit$__func$MH = RuntimeHelper.downcallHandle(
            "()V",
            constants$33.atexit$__func$FUNC, false
    );
    static final FunctionDescriptor atexit$FUNC = FunctionDescriptor.of(C_INT,
            C_POINTER
    );
    static final MethodHandle atexit$MH = RuntimeHelper.downcallHandle(
            libraw_h.LIBRARIES, "atexit",
            "(Ljdk/incubator/foreign/MemoryAddress;)I",
            constants$33.atexit$FUNC, false
    );
    static final FunctionDescriptor at_quick_exit$__func$FUNC = FunctionDescriptor.ofVoid();
}


