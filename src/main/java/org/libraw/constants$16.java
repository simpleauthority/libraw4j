// Generated by jextract

package org.libraw;

import jdk.incubator.foreign.FunctionDescriptor;

import java.lang.invoke.MethodHandle;

import static jdk.incubator.foreign.CLinker.C_INT;
import static jdk.incubator.foreign.CLinker.C_POINTER;

class constants$16 {

    static final FunctionDescriptor putc$FUNC = FunctionDescriptor.of(C_INT,
            C_INT,
            C_POINTER
    );
    static final MethodHandle putc$MH = RuntimeHelper.downcallHandle(
            libraw_h.LIBRARIES, "putc",
            "(ILjdk/incubator/foreign/MemoryAddress;)I",
            constants$16.putc$FUNC, false
    );
    static final FunctionDescriptor putchar$FUNC = FunctionDescriptor.of(C_INT,
            C_INT
    );
    static final MethodHandle putchar$MH = RuntimeHelper.downcallHandle(
            libraw_h.LIBRARIES, "putchar",
            "(I)I",
            constants$16.putchar$FUNC, false
    );
    static final FunctionDescriptor fputc_unlocked$FUNC = FunctionDescriptor.of(C_INT,
            C_INT,
            C_POINTER
    );
    static final MethodHandle fputc_unlocked$MH = RuntimeHelper.downcallHandle(
            libraw_h.LIBRARIES, "fputc_unlocked",
            "(ILjdk/incubator/foreign/MemoryAddress;)I",
            constants$16.fputc_unlocked$FUNC, false
    );
    static final FunctionDescriptor putc_unlocked$FUNC = FunctionDescriptor.of(C_INT,
            C_INT,
            C_POINTER
    );
    static final MethodHandle putc_unlocked$MH = RuntimeHelper.downcallHandle(
            libraw_h.LIBRARIES, "putc_unlocked",
            "(ILjdk/incubator/foreign/MemoryAddress;)I",
            constants$16.putc_unlocked$FUNC, false
    );
    static final FunctionDescriptor putchar_unlocked$FUNC = FunctionDescriptor.of(C_INT,
            C_INT
    );
    static final MethodHandle putchar_unlocked$MH = RuntimeHelper.downcallHandle(
            libraw_h.LIBRARIES, "putchar_unlocked",
            "(I)I",
            constants$16.putchar_unlocked$FUNC, false
    );
    static final FunctionDescriptor getw$FUNC = FunctionDescriptor.of(C_INT,
            C_POINTER
    );
    static final MethodHandle getw$MH = RuntimeHelper.downcallHandle(
            libraw_h.LIBRARIES, "getw",
            "(Ljdk/incubator/foreign/MemoryAddress;)I",
            constants$16.getw$FUNC, false
    );
}


