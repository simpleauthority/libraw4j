// Generated by jextract

package org.libraw;

import jdk.incubator.foreign.FunctionDescriptor;

import java.lang.invoke.MethodHandle;

import static jdk.incubator.foreign.CLinker.C_LONG;
import static jdk.incubator.foreign.CLinker.C_POINTER;

class constants$29 {

    static final FunctionDescriptor lrand48$FUNC = FunctionDescriptor.of(C_LONG);
    static final MethodHandle lrand48$MH = RuntimeHelper.downcallHandle(
            libraw_h.LIBRARIES, "lrand48",
            "()J",
            constants$29.lrand48$FUNC, false
    );
    static final FunctionDescriptor nrand48$FUNC = FunctionDescriptor.of(C_LONG,
            C_POINTER
    );
    static final MethodHandle nrand48$MH = RuntimeHelper.downcallHandle(
            libraw_h.LIBRARIES, "nrand48",
            "(Ljdk/incubator/foreign/MemoryAddress;)J",
            constants$29.nrand48$FUNC, false
    );
    static final FunctionDescriptor mrand48$FUNC = FunctionDescriptor.of(C_LONG);
    static final MethodHandle mrand48$MH = RuntimeHelper.downcallHandle(
            libraw_h.LIBRARIES, "mrand48",
            "()J",
            constants$29.mrand48$FUNC, false
    );
    static final FunctionDescriptor jrand48$FUNC = FunctionDescriptor.of(C_LONG,
            C_POINTER
    );
    static final MethodHandle jrand48$MH = RuntimeHelper.downcallHandle(
            libraw_h.LIBRARIES, "jrand48",
            "(Ljdk/incubator/foreign/MemoryAddress;)J",
            constants$29.jrand48$FUNC, false
    );
    static final FunctionDescriptor srand48$FUNC = FunctionDescriptor.ofVoid(
            C_LONG
    );
    static final MethodHandle srand48$MH = RuntimeHelper.downcallHandle(
            libraw_h.LIBRARIES, "srand48",
            "(J)V",
            constants$29.srand48$FUNC, false
    );
    static final FunctionDescriptor seed48$FUNC = FunctionDescriptor.of(C_POINTER,
            C_POINTER
    );
    static final MethodHandle seed48$MH = RuntimeHelper.downcallHandle(
            libraw_h.LIBRARIES, "seed48",
            "(Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
            constants$29.seed48$FUNC, false
    );
}


