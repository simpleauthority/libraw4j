// Generated by jextract

package org.libraw;

import jdk.incubator.foreign.FunctionDescriptor;

import java.lang.invoke.MethodHandle;

import static jdk.incubator.foreign.CLinker.C_FLOAT;
import static jdk.incubator.foreign.CLinker.C_INT;

class constants$83 {

    static final FunctionDescriptor nextafterf$FUNC = FunctionDescriptor.of(C_FLOAT,
            C_FLOAT,
            C_FLOAT
    );
    static final MethodHandle nextafterf$MH = RuntimeHelper.downcallHandle(
            libraw_h.LIBRARIES, "nextafterf",
            "(FF)F",
            constants$83.nextafterf$FUNC, false
    );
    static final FunctionDescriptor __nextafterf$FUNC = FunctionDescriptor.of(C_FLOAT,
            C_FLOAT,
            C_FLOAT
    );
    static final MethodHandle __nextafterf$MH = RuntimeHelper.downcallHandle(
            libraw_h.LIBRARIES, "__nextafterf",
            "(FF)F",
            constants$83.__nextafterf$FUNC, false
    );
    static final FunctionDescriptor remainderf$FUNC = FunctionDescriptor.of(C_FLOAT,
            C_FLOAT,
            C_FLOAT
    );
    static final MethodHandle remainderf$MH = RuntimeHelper.downcallHandle(
            libraw_h.LIBRARIES, "remainderf",
            "(FF)F",
            constants$83.remainderf$FUNC, false
    );
    static final FunctionDescriptor __remainderf$FUNC = FunctionDescriptor.of(C_FLOAT,
            C_FLOAT,
            C_FLOAT
    );
    static final MethodHandle __remainderf$MH = RuntimeHelper.downcallHandle(
            libraw_h.LIBRARIES, "__remainderf",
            "(FF)F",
            constants$83.__remainderf$FUNC, false
    );
    static final FunctionDescriptor scalbnf$FUNC = FunctionDescriptor.of(C_FLOAT,
            C_FLOAT,
            C_INT
    );
    static final MethodHandle scalbnf$MH = RuntimeHelper.downcallHandle(
            libraw_h.LIBRARIES, "scalbnf",
            "(FI)F",
            constants$83.scalbnf$FUNC, false
    );
    static final FunctionDescriptor __scalbnf$FUNC = FunctionDescriptor.of(C_FLOAT,
            C_FLOAT,
            C_INT
    );
    static final MethodHandle __scalbnf$MH = RuntimeHelper.downcallHandle(
            libraw_h.LIBRARIES, "__scalbnf",
            "(FI)F",
            constants$83.__scalbnf$FUNC, false
    );
}


