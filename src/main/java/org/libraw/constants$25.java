// Generated by jextract

package org.libraw;

import jdk.incubator.foreign.FunctionDescriptor;

import java.lang.invoke.MethodHandle;

import static jdk.incubator.foreign.CLinker.C_INT;
import static jdk.incubator.foreign.CLinker.C_LONG;
import static jdk.incubator.foreign.CLinker.C_LONG_LONG;
import static jdk.incubator.foreign.CLinker.C_POINTER;
import static jdk.incubator.foreign.CLinker.C_SHORT;

class constants$25 {

    static final FunctionDescriptor strtoull$FUNC = FunctionDescriptor.of(C_LONG_LONG,
            C_POINTER,
            C_POINTER,
            C_INT
    );
    static final MethodHandle strtoull$MH = RuntimeHelper.downcallHandle(
            libraw_h.LIBRARIES, "strtoull",
            "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)J",
            constants$25.strtoull$FUNC, false
    );
    static final FunctionDescriptor l64a$FUNC = FunctionDescriptor.of(C_POINTER,
            C_LONG
    );
    static final MethodHandle l64a$MH = RuntimeHelper.downcallHandle(
            libraw_h.LIBRARIES, "l64a",
            "(J)Ljdk/incubator/foreign/MemoryAddress;",
            constants$25.l64a$FUNC, false
    );
    static final FunctionDescriptor a64l$FUNC = FunctionDescriptor.of(C_LONG,
            C_POINTER
    );
    static final MethodHandle a64l$MH = RuntimeHelper.downcallHandle(
            libraw_h.LIBRARIES, "a64l",
            "(Ljdk/incubator/foreign/MemoryAddress;)J",
            constants$25.a64l$FUNC, false
    );
    static final FunctionDescriptor __bswap_16$FUNC = FunctionDescriptor.of(C_SHORT,
            C_SHORT
    );
    static final MethodHandle __bswap_16$MH = RuntimeHelper.downcallHandle(
            libraw_h.LIBRARIES, "__bswap_16",
            "(S)S",
            constants$25.__bswap_16$FUNC, false
    );
    static final FunctionDescriptor __bswap_32$FUNC = FunctionDescriptor.of(C_INT,
            C_INT
    );
    static final MethodHandle __bswap_32$MH = RuntimeHelper.downcallHandle(
            libraw_h.LIBRARIES, "__bswap_32",
            "(I)I",
            constants$25.__bswap_32$FUNC, false
    );
    static final FunctionDescriptor __bswap_64$FUNC = FunctionDescriptor.of(C_LONG,
            C_LONG
    );
    static final MethodHandle __bswap_64$MH = RuntimeHelper.downcallHandle(
            libraw_h.LIBRARIES, "__bswap_64",
            "(J)J",
            constants$25.__bswap_64$FUNC, false
    );
}


