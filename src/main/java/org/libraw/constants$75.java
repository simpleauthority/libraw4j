// Generated by jextract

package org.libraw;

import jdk.incubator.foreign.FunctionDescriptor;

import java.lang.invoke.MethodHandle;

import static jdk.incubator.foreign.CLinker.C_FLOAT;

class constants$75 {

    static final FunctionDescriptor __hypotf$FUNC = FunctionDescriptor.of(C_FLOAT,
            C_FLOAT,
            C_FLOAT
    );
    static final MethodHandle __hypotf$MH = RuntimeHelper.downcallHandle(
            libraw_h.LIBRARIES, "__hypotf",
            "(FF)F",
            constants$75.__hypotf$FUNC, false
    );
    static final FunctionDescriptor cbrtf$FUNC = FunctionDescriptor.of(C_FLOAT,
            C_FLOAT
    );
    static final MethodHandle cbrtf$MH = RuntimeHelper.downcallHandle(
            libraw_h.LIBRARIES, "cbrtf",
            "(F)F",
            constants$75.cbrtf$FUNC, false
    );
    static final FunctionDescriptor __cbrtf$FUNC = FunctionDescriptor.of(C_FLOAT,
            C_FLOAT
    );
    static final MethodHandle __cbrtf$MH = RuntimeHelper.downcallHandle(
            libraw_h.LIBRARIES, "__cbrtf",
            "(F)F",
            constants$75.__cbrtf$FUNC, false
    );
    static final FunctionDescriptor ceilf$FUNC = FunctionDescriptor.of(C_FLOAT,
            C_FLOAT
    );
    static final MethodHandle ceilf$MH = RuntimeHelper.downcallHandle(
            libraw_h.LIBRARIES, "ceilf",
            "(F)F",
            constants$75.ceilf$FUNC, false
    );
    static final FunctionDescriptor __ceilf$FUNC = FunctionDescriptor.of(C_FLOAT,
            C_FLOAT
    );
    static final MethodHandle __ceilf$MH = RuntimeHelper.downcallHandle(
            libraw_h.LIBRARIES, "__ceilf",
            "(F)F",
            constants$75.__ceilf$FUNC, false
    );
    static final FunctionDescriptor fabsf$FUNC = FunctionDescriptor.of(C_FLOAT,
            C_FLOAT
    );
    static final MethodHandle fabsf$MH = RuntimeHelper.downcallHandle(
            libraw_h.LIBRARIES, "fabsf",
            "(F)F",
            constants$75.fabsf$FUNC, false
    );
}


