// Generated by jextract

package org.libraw;

import jdk.incubator.foreign.FunctionDescriptor;

import java.lang.invoke.MethodHandle;

import static jdk.incubator.foreign.CLinker.C_INT;
import static jdk.incubator.foreign.CLinker.C_LONG;
import static jdk.incubator.foreign.CLinker.C_POINTER;

class constants$1 {

    static final FunctionDescriptor strcpy$FUNC = FunctionDescriptor.of(C_POINTER,
            C_POINTER,
            C_POINTER
    );
    static final MethodHandle strcpy$MH = RuntimeHelper.downcallHandle(
            libraw_h.LIBRARIES, "strcpy",
            "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
            constants$1.strcpy$FUNC, false
    );
    static final FunctionDescriptor strncpy$FUNC = FunctionDescriptor.of(C_POINTER,
            C_POINTER,
            C_POINTER,
            C_LONG
    );
    static final MethodHandle strncpy$MH = RuntimeHelper.downcallHandle(
            libraw_h.LIBRARIES, "strncpy",
            "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;J)Ljdk/incubator/foreign/MemoryAddress;",
            constants$1.strncpy$FUNC, false
    );
    static final FunctionDescriptor strcat$FUNC = FunctionDescriptor.of(C_POINTER,
            C_POINTER,
            C_POINTER
    );
    static final MethodHandle strcat$MH = RuntimeHelper.downcallHandle(
            libraw_h.LIBRARIES, "strcat",
            "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
            constants$1.strcat$FUNC, false
    );
    static final FunctionDescriptor strncat$FUNC = FunctionDescriptor.of(C_POINTER,
            C_POINTER,
            C_POINTER,
            C_LONG
    );
    static final MethodHandle strncat$MH = RuntimeHelper.downcallHandle(
            libraw_h.LIBRARIES, "strncat",
            "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;J)Ljdk/incubator/foreign/MemoryAddress;",
            constants$1.strncat$FUNC, false
    );
    static final FunctionDescriptor strcmp$FUNC = FunctionDescriptor.of(C_INT,
            C_POINTER,
            C_POINTER
    );
    static final MethodHandle strcmp$MH = RuntimeHelper.downcallHandle(
            libraw_h.LIBRARIES, "strcmp",
            "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
            constants$1.strcmp$FUNC, false
    );
    static final FunctionDescriptor strncmp$FUNC = FunctionDescriptor.of(C_INT,
            C_POINTER,
            C_POINTER,
            C_LONG
    );
    static final MethodHandle strncmp$MH = RuntimeHelper.downcallHandle(
            libraw_h.LIBRARIES, "strncmp",
            "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;J)I",
            constants$1.strncmp$FUNC, false
    );
}


