// Generated by jextract

package org.libraw;

import jdk.incubator.foreign.FunctionDescriptor;

import java.lang.invoke.MethodHandle;

import static jdk.incubator.foreign.CLinker.C_INT;
import static jdk.incubator.foreign.CLinker.C_LONG;
import static jdk.incubator.foreign.CLinker.C_POINTER;

class constants$37 {

    static final FunctionDescriptor realpath$FUNC = FunctionDescriptor.of(C_POINTER,
            C_POINTER,
            C_POINTER
    );
    static final MethodHandle realpath$MH = RuntimeHelper.downcallHandle(
            libraw_h.LIBRARIES, "realpath",
            "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
            constants$37.realpath$FUNC, false
    );
    static final FunctionDescriptor __compar_fn_t$FUNC = FunctionDescriptor.of(C_INT,
            C_POINTER,
            C_POINTER
    );
    static final MethodHandle __compar_fn_t$MH = RuntimeHelper.downcallHandle(
            "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
            constants$37.__compar_fn_t$FUNC, false
    );
    static final FunctionDescriptor bsearch$FUNC = FunctionDescriptor.of(C_POINTER,
            C_POINTER,
            C_POINTER,
            C_LONG,
            C_LONG,
            C_POINTER
    );
    static final MethodHandle bsearch$MH = RuntimeHelper.downcallHandle(
            libraw_h.LIBRARIES, "bsearch",
            "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;JJLjdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
            constants$37.bsearch$FUNC, false
    );
    static final FunctionDescriptor qsort$FUNC = FunctionDescriptor.ofVoid(
            C_POINTER,
            C_LONG,
            C_LONG,
            C_POINTER
    );
    static final MethodHandle qsort$MH = RuntimeHelper.downcallHandle(
            libraw_h.LIBRARIES, "qsort",
            "(Ljdk/incubator/foreign/MemoryAddress;JJLjdk/incubator/foreign/MemoryAddress;)V",
            constants$37.qsort$FUNC, false
    );
    static final FunctionDescriptor abs$FUNC = FunctionDescriptor.of(C_INT,
            C_INT
    );
    static final MethodHandle abs$MH = RuntimeHelper.downcallHandle(
            libraw_h.LIBRARIES, "abs",
            "(I)I",
            constants$37.abs$FUNC, false
    );
}


