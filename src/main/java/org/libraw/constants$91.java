// Generated by jextract

package org.libraw;

import jdk.incubator.foreign.FunctionDescriptor;

import java.lang.invoke.MethodHandle;

import static jdk.incubator.foreign.CLinker.C_INT;
import static jdk.incubator.foreign.CLinker.C_LONG;
import static jdk.incubator.foreign.CLinker.C_POINTER;

class constants$91 {

    static final FunctionDescriptor strtoimax$FUNC = FunctionDescriptor.of(C_LONG,
            C_POINTER,
            C_POINTER,
            C_INT
    );
    static final MethodHandle strtoimax$MH = RuntimeHelper.downcallHandle(
            libraw_h.LIBRARIES, "strtoimax",
            "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)J",
            constants$91.strtoimax$FUNC, false
    );
    static final FunctionDescriptor strtoumax$FUNC = FunctionDescriptor.of(C_LONG,
            C_POINTER,
            C_POINTER,
            C_INT
    );
    static final MethodHandle strtoumax$MH = RuntimeHelper.downcallHandle(
            libraw_h.LIBRARIES, "strtoumax",
            "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)J",
            constants$91.strtoumax$FUNC, false
    );
    static final FunctionDescriptor wcstoimax$FUNC = FunctionDescriptor.of(C_LONG,
            C_POINTER,
            C_POINTER,
            C_INT
    );
    static final MethodHandle wcstoimax$MH = RuntimeHelper.downcallHandle(
            libraw_h.LIBRARIES, "wcstoimax",
            "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)J",
            constants$91.wcstoimax$FUNC, false
    );
    static final FunctionDescriptor wcstoumax$FUNC = FunctionDescriptor.of(C_LONG,
            C_POINTER,
            C_POINTER,
            C_INT
    );
    static final MethodHandle wcstoumax$MH = RuntimeHelper.downcallHandle(
            libraw_h.LIBRARIES, "wcstoumax",
            "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)J",
            constants$91.wcstoumax$FUNC, false
    );
    static final FunctionDescriptor memory_callback$FUNC = FunctionDescriptor.ofVoid(
            C_POINTER,
            C_POINTER,
            C_POINTER
    );
    static final MethodHandle memory_callback$MH = RuntimeHelper.downcallHandle(
            "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)V",
            constants$91.memory_callback$FUNC, false
    );
}


