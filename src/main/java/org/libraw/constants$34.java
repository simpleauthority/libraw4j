// Generated by jextract

package org.libraw;

import jdk.incubator.foreign.FunctionDescriptor;

import java.lang.invoke.MethodHandle;

import static jdk.incubator.foreign.CLinker.C_INT;
import static jdk.incubator.foreign.CLinker.C_POINTER;

class constants$34 {

    static final FunctionDescriptor at_quick_exit$__func$FUNC = FunctionDescriptor.ofVoid();
    static final MethodHandle at_quick_exit$__func$MH = RuntimeHelper.downcallHandle(
            "()V",
            constants$34.at_quick_exit$__func$FUNC, false
    );
    static final FunctionDescriptor at_quick_exit$FUNC = FunctionDescriptor.of(C_INT,
            C_POINTER
    );
    static final MethodHandle at_quick_exit$MH = RuntimeHelper.downcallHandle(
            libraw_h.LIBRARIES, "at_quick_exit",
            "(Ljdk/incubator/foreign/MemoryAddress;)I",
            constants$34.at_quick_exit$FUNC, false
    );
    static final FunctionDescriptor on_exit$__func$FUNC = FunctionDescriptor.ofVoid(
            C_INT,
            C_POINTER
    );
    static final MethodHandle on_exit$__func$MH = RuntimeHelper.downcallHandle(
            "(ILjdk/incubator/foreign/MemoryAddress;)V",
            constants$34.on_exit$__func$FUNC, false
    );
    static final FunctionDescriptor on_exit$FUNC = FunctionDescriptor.of(C_INT,
            C_POINTER,
            C_POINTER
    );
    static final MethodHandle on_exit$MH = RuntimeHelper.downcallHandle(
            libraw_h.LIBRARIES, "on_exit",
            "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
            constants$34.on_exit$FUNC, false
    );
    static final FunctionDescriptor exit$FUNC = FunctionDescriptor.ofVoid(
            C_INT
    );
    static final MethodHandle exit$MH = RuntimeHelper.downcallHandle(
            libraw_h.LIBRARIES, "exit",
            "(I)V",
            constants$34.exit$FUNC, false
    );
}


