// Generated by jextract

package org.libraw;

import jdk.incubator.foreign.FunctionDescriptor;

import java.lang.invoke.MethodHandle;

import static jdk.incubator.foreign.CLinker.C_FLOAT;
import static jdk.incubator.foreign.CLinker.C_INT;

class constants$80 {

    static final FunctionDescriptor y1f$FUNC = FunctionDescriptor.of(C_FLOAT,
            C_FLOAT
    );
    static final MethodHandle y1f$MH = RuntimeHelper.downcallHandle(
            libraw_h.LIBRARIES, "y1f",
            "(F)F",
            constants$80.y1f$FUNC, false
    );
    static final FunctionDescriptor __y1f$FUNC = FunctionDescriptor.of(C_FLOAT,
            C_FLOAT
    );
    static final MethodHandle __y1f$MH = RuntimeHelper.downcallHandle(
            libraw_h.LIBRARIES, "__y1f",
            "(F)F",
            constants$80.__y1f$FUNC, false
    );
    static final FunctionDescriptor ynf$FUNC = FunctionDescriptor.of(C_FLOAT,
            C_INT,
            C_FLOAT
    );
    static final MethodHandle ynf$MH = RuntimeHelper.downcallHandle(
            libraw_h.LIBRARIES, "ynf",
            "(IF)F",
            constants$80.ynf$FUNC, false
    );
    static final FunctionDescriptor __ynf$FUNC = FunctionDescriptor.of(C_FLOAT,
            C_INT,
            C_FLOAT
    );
    static final MethodHandle __ynf$MH = RuntimeHelper.downcallHandle(
            libraw_h.LIBRARIES, "__ynf",
            "(IF)F",
            constants$80.__ynf$FUNC, false
    );
    static final FunctionDescriptor erff$FUNC = FunctionDescriptor.of(C_FLOAT,
            C_FLOAT
    );
    static final MethodHandle erff$MH = RuntimeHelper.downcallHandle(
            libraw_h.LIBRARIES, "erff",
            "(F)F",
            constants$80.erff$FUNC, false
    );
    static final FunctionDescriptor __erff$FUNC = FunctionDescriptor.of(C_FLOAT,
            C_FLOAT
    );
    static final MethodHandle __erff$MH = RuntimeHelper.downcallHandle(
            libraw_h.LIBRARIES, "__erff",
            "(F)F",
            constants$80.__erff$FUNC, false
    );
}


