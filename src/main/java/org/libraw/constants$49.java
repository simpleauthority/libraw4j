// Generated by jextract

package org.libraw;

import jdk.incubator.foreign.FunctionDescriptor;

import java.lang.invoke.MethodHandle;

import static jdk.incubator.foreign.CLinker.C_DOUBLE;

class constants$49 {

    static final FunctionDescriptor __log1p$FUNC = FunctionDescriptor.of(C_DOUBLE,
            C_DOUBLE
    );
    static final MethodHandle __log1p$MH = RuntimeHelper.downcallHandle(
            libraw_h.LIBRARIES, "__log1p",
            "(D)D",
            constants$49.__log1p$FUNC, false
    );
    static final FunctionDescriptor logb$FUNC = FunctionDescriptor.of(C_DOUBLE,
            C_DOUBLE
    );
    static final MethodHandle logb$MH = RuntimeHelper.downcallHandle(
            libraw_h.LIBRARIES, "logb",
            "(D)D",
            constants$49.logb$FUNC, false
    );
    static final FunctionDescriptor __logb$FUNC = FunctionDescriptor.of(C_DOUBLE,
            C_DOUBLE
    );
    static final MethodHandle __logb$MH = RuntimeHelper.downcallHandle(
            libraw_h.LIBRARIES, "__logb",
            "(D)D",
            constants$49.__logb$FUNC, false
    );
    static final FunctionDescriptor exp2$FUNC = FunctionDescriptor.of(C_DOUBLE,
            C_DOUBLE
    );
    static final MethodHandle exp2$MH = RuntimeHelper.downcallHandle(
            libraw_h.LIBRARIES, "exp2",
            "(D)D",
            constants$49.exp2$FUNC, false
    );
    static final FunctionDescriptor __exp2$FUNC = FunctionDescriptor.of(C_DOUBLE,
            C_DOUBLE
    );
    static final MethodHandle __exp2$MH = RuntimeHelper.downcallHandle(
            libraw_h.LIBRARIES, "__exp2",
            "(D)D",
            constants$49.__exp2$FUNC, false
    );
    static final FunctionDescriptor log2$FUNC = FunctionDescriptor.of(C_DOUBLE,
            C_DOUBLE
    );
    static final MethodHandle log2$MH = RuntimeHelper.downcallHandle(
            libraw_h.LIBRARIES, "log2",
            "(D)D",
            constants$49.log2$FUNC, false
    );
}


