// Generated by jextract

package org.libraw;

import jdk.incubator.foreign.FunctionDescriptor;

import java.lang.invoke.MethodHandle;

import static jdk.incubator.foreign.CLinker.C_INT;
import static jdk.incubator.foreign.CLinker.C_LONG;
import static jdk.incubator.foreign.CLinker.C_POINTER;

class constants$19 {

    static final FunctionDescriptor fseek$FUNC = FunctionDescriptor.of(C_INT,
            C_POINTER,
            C_LONG,
            C_INT
    );
    static final MethodHandle fseek$MH = RuntimeHelper.downcallHandle(
            libraw_h.LIBRARIES, "fseek",
            "(Ljdk/incubator/foreign/MemoryAddress;JI)I",
            constants$19.fseek$FUNC, false
    );
    static final FunctionDescriptor ftell$FUNC = FunctionDescriptor.of(C_LONG,
            C_POINTER
    );
    static final MethodHandle ftell$MH = RuntimeHelper.downcallHandle(
            libraw_h.LIBRARIES, "ftell",
            "(Ljdk/incubator/foreign/MemoryAddress;)J",
            constants$19.ftell$FUNC, false
    );
    static final FunctionDescriptor rewind$FUNC = FunctionDescriptor.ofVoid(
            C_POINTER
    );
    static final MethodHandle rewind$MH = RuntimeHelper.downcallHandle(
            libraw_h.LIBRARIES, "rewind",
            "(Ljdk/incubator/foreign/MemoryAddress;)V",
            constants$19.rewind$FUNC, false
    );
    static final FunctionDescriptor fseeko$FUNC = FunctionDescriptor.of(C_INT,
            C_POINTER,
            C_LONG,
            C_INT
    );
    static final MethodHandle fseeko$MH = RuntimeHelper.downcallHandle(
            libraw_h.LIBRARIES, "fseeko",
            "(Ljdk/incubator/foreign/MemoryAddress;JI)I",
            constants$19.fseeko$FUNC, false
    );
    static final FunctionDescriptor ftello$FUNC = FunctionDescriptor.of(C_LONG,
            C_POINTER
    );
    static final MethodHandle ftello$MH = RuntimeHelper.downcallHandle(
            libraw_h.LIBRARIES, "ftello",
            "(Ljdk/incubator/foreign/MemoryAddress;)J",
            constants$19.ftello$FUNC, false
    );
    static final FunctionDescriptor fgetpos$FUNC = FunctionDescriptor.of(C_INT,
            C_POINTER,
            C_POINTER
    );
    static final MethodHandle fgetpos$MH = RuntimeHelper.downcallHandle(
            libraw_h.LIBRARIES, "fgetpos",
            "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
            constants$19.fgetpos$FUNC, false
    );
}


