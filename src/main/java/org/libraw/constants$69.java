// Generated by jextract

package org.libraw;

import jdk.incubator.foreign.FunctionDescriptor;

import java.lang.invoke.MethodHandle;

import static jdk.incubator.foreign.CLinker.C_FLOAT;

class constants$69 {

    static final FunctionDescriptor __sinhf$FUNC = FunctionDescriptor.of(C_FLOAT,
            C_FLOAT
    );
    static final MethodHandle __sinhf$MH = RuntimeHelper.downcallHandle(
            libraw_h.LIBRARIES, "__sinhf",
            "(F)F",
            constants$69.__sinhf$FUNC, false
    );
    static final FunctionDescriptor tanhf$FUNC = FunctionDescriptor.of(C_FLOAT,
            C_FLOAT
    );
    static final MethodHandle tanhf$MH = RuntimeHelper.downcallHandle(
            libraw_h.LIBRARIES, "tanhf",
            "(F)F",
            constants$69.tanhf$FUNC, false
    );
    static final FunctionDescriptor __tanhf$FUNC = FunctionDescriptor.of(C_FLOAT,
            C_FLOAT
    );
    static final MethodHandle __tanhf$MH = RuntimeHelper.downcallHandle(
            libraw_h.LIBRARIES, "__tanhf",
            "(F)F",
            constants$69.__tanhf$FUNC, false
    );
    static final FunctionDescriptor acoshf$FUNC = FunctionDescriptor.of(C_FLOAT,
            C_FLOAT
    );
    static final MethodHandle acoshf$MH = RuntimeHelper.downcallHandle(
            libraw_h.LIBRARIES, "acoshf",
            "(F)F",
            constants$69.acoshf$FUNC, false
    );
    static final FunctionDescriptor __acoshf$FUNC = FunctionDescriptor.of(C_FLOAT,
            C_FLOAT
    );
    static final MethodHandle __acoshf$MH = RuntimeHelper.downcallHandle(
            libraw_h.LIBRARIES, "__acoshf",
            "(F)F",
            constants$69.__acoshf$FUNC, false
    );
    static final FunctionDescriptor asinhf$FUNC = FunctionDescriptor.of(C_FLOAT,
            C_FLOAT
    );
    static final MethodHandle asinhf$MH = RuntimeHelper.downcallHandle(
            libraw_h.LIBRARIES, "asinhf",
            "(F)F",
            constants$69.asinhf$FUNC, false
    );
}


